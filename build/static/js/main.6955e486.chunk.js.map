{"version":3,"sources":["common/pagination.jsx","common/listgroup.jsx","common/tableHeader.jsx","common/tableBody.jsx","common/table.jsx","common/like.jsx","components/moviesTable.jsx","components/search.jsx","services/httpService.js","services/movieService.js","utils/paginate.js","services/genreService.js","components/movies.jsx","components/customers.jsx","components/rentals.jsx","components/notfound.jsx","components/moviedetails.jsx","common/input.jsx","common/select.jsx","common/form.jsx","services/authService.js","components/loginForm.jsx","services/userService.js","components/RegisterForm.jsx","components/addmovie.jsx","components/navbar.jsx","components/logout.jsx","common/protectedroute.jsx","App.js","serviceWorker.js","index.js"],"names":["Pagination","props","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","className","map","page","key","onClick","ListGroup","items","TextProperty","ValueProperty","selectedItem","onItemSelect","item","defaultProps","TableHeader","state","raiseSort","path","sortColumn","order","onSort","columns","this","column","label","Component","TableBody","renderCell","content","get","data","_id","Table","Like","getclasses","liked","style","cursor","aria-hidden","MoviesTable","movie","Link","to","title","onLike","getDeleteContent","user","isAdmin","onDelete","movies","Search","value","onChange","type","id","placeholder","e","currentTarget","axios","defaults","baseURL","process","interceptors","response","use","error","status","console","log","toast","Promise","reject","post","put","delete","setJwt","jwt","headers","common","movieUrl","movieId","getMovie","http","deleteMovie","saveMovie","body","Paginate","pageNumber","startIndex","slice","take","getGenres","Movies","genres","searchQuery","handleDelete","a","originalMovies","filter","m","setState","handleLove","index","indexOf","handlePageChange","handleGenreSelect","genre","selectedGenre","getPagedData","allMovies","filtered","toLowerCase","startsWith","orderBy","totalCount","length","handleSort","handleNavigate","handleSearch","query","name","onNavigate","Customers","Rentals","NotFound","Input","htmlFor","autoFocus","Select","ValuePropery","Form","errors","validate","Joi","schema","abortEarly","details","message","validateProperty","obj","handleChange","input","errorMessage","handleSubmit","preventDefault","doSubmit","disabled","email","password","localStorage","setItem","getJwt","getItem","login","loginWithJwt","token","getCurrentUser","jwtDecode","logout","removeItem","LoginForm","username","string","required","auth","location","window","from","pathname","reponse","Redirect","onSubmit","renderInput","renderButton","register","Register","minDomainAtoms","min","userService","AddMovie","genreId","numberInStock","dailyRentalRate","number","integer","max","history","push","match","params","mapToViewModel","replace","populateGenres","populateMovie","renderSelect","NavBar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","NavLink","Fragment","Logout","ProtectedRoute","component","render","rest","Route","App","ex","Switch","RegisterForm","exact","Boolean","hostname","ReactDOM","StrictMode","BrowserRouter","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6955e486.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Pagination = (props) => {\n  const { itemsCount, pageSize, onPageChange, currentPage } = props;\n  const pagesCount = Math.ceil(itemsCount / pageSize);\n  if (pagesCount === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n  return (\n    <nav>\n      <ul className=\"pagination\">\n        {pages.map((page) => (\n          <li\n            key={page}\n            className={currentPage === page ? \"page-item active\" : \"page-item\"}\n          >\n            <a onClick={() => onPageChange(page)} className=\"page-link\">\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired,\n};\nexport default Pagination;\n","import React from \"react\";\nconst ListGroup = (props) => {\n  const {\n    items,\n    TextProperty,\n    ValueProperty,\n    selectedItem,\n    onItemSelect,\n  } = props;\n\n  return (\n    <ul className=\"list-group\">\n      {items.map((item) => (\n        <li\n          onClick={() => onItemSelect(item)}\n          key={item[ValueProperty]}\n          className={\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\n          }\n        >\n          {item[TextProperty]}\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nListGroup.defaultProps = {\n  TextProperty: \"name\",\n  ValueProperty: \"_id\",\n};\n\nexport default ListGroup;\n","import React, { Component } from \"react\";\nclass TableHeader extends Component {\n  state = {};\n  raiseSort = (path) => {\n    const sortColumn = { ...this.props.sortColumn };\n    if (sortColumn.path === path) {\n      sortColumn.order = sortColumn.order == \"asc\" ? \"desc\" : \"asc\";\n    } else {\n      sortColumn.path = path;\n      sortColumn.order = \"asc\";\n    }\n    this.props.onSort(sortColumn);\n  };\n  render() {\n    const { columns } = this.props;\n    return (\n      <thead>\n        <tr>\n          {columns.map((column) => (\n            <th\n              key={column.path || column.key}\n              onClick={() => this.raiseSort(column.path)}\n            >\n              {column.label}\n            </th>\n          ))}\n        </tr>\n      </thead>\n    );\n  }\n}\n\nexport default TableHeader;\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\n\nclass TableBody extends Component {\n  state = {};\n  renderCell = (item, column) => {\n    if (column.content) return column.content(item);\n\n    return _.get(item, column.path);\n  };\n  render() {\n    const { data, columns } = this.props;\n    return (\n      <tbody>\n        {data.map((item) => (\n          <tr key={item._id}>\n            {columns.map((column) => (\n              <td key={item._id + (column.path || column.key)}>\n                {this.renderCell(item, column)}\n              </td>\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    );\n  }\n}\n\nexport default TableBody;\n","import React, { Component } from \"react\";\nimport TableHeader from \"../common/tableHeader\";\nimport TableBody from \"../common/tableBody\";\n\nconst Table = (props) => {\n  const { columns, sortColumn, onSort, data } = props;\n  return (\n    <table className=\"table\">\n      <TableHeader\n        columns={columns}\n        sortColumn={sortColumn}\n        onSort={onSort}\n      ></TableHeader>\n      <TableBody data={data} columns={columns}></TableBody>\n    </table>\n  );\n};\n\nexport default Table;\n","import React, { Component } from \"react\";\nclass Like extends Component {\n  state = {};\n  render() {\n    const getclasses = this.props.liked ? \"fa fa-heart\" : \"fa fa-heart-o\";\n    return (\n      <i\n        className={getclasses}\n        style={{ cursor: \"pointer\" }}\n        onClick={this.props.onClick}\n        aria-hidden=\"true\"\n      ></i>\n    );\n  }\n}\n\nexport default Like;\n","import React, { Component } from \"react\";\nimport Table from \"../common/table\";\nimport Like from \"../common/like\";\nimport { Link } from \"react-router-dom\";\nclass MoviesTable extends Component {\n  getDeleteContent() {\n    if (this.props.user && this.props.user.isAdmin) {\n      return (movie) => (\n        <button\n          onClick={() => this.props.onDelete(movie)}\n          className=\"btn btn-sm btn-danger\"\n        >\n          Delete\n        </button>\n      );\n    } else {\n      return null;\n    }\n  }\n  columns = [\n    {\n      path: \"title\",\n      content: (movie) => (\n        <Link to={\"/movies/\" + movie._id}>{movie.title}</Link>\n      ),\n    },\n    { path: \"genre.name\", label: \"Genre\" },\n    { path: \"numberInStock\", label: \"Stock\" },\n    { path: \"dailyRentalRate\", label: \"Rate\" },\n    {\n      key: \"like\",\n      content: (movie) => (\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\n      ),\n    },\n    {\n      key: \"delete\",\n      content: this.getDeleteContent(),\n    },\n  ];\n\n  render() {\n    const { movies, sortColumn, onSort } = this.props;\n    return (\n      <Table\n        columns={this.columns}\n        data={movies}\n        onSort={onSort}\n        sortColumn={sortColumn}\n      ></Table>\n    );\n  }\n}\nexport default MoviesTable;\n","import React, { Component } from \"react\";\nconst Search = ({ value, onChange }) => {\n  return (\n    <input\n      type=\"text\"\n      value={value}\n      id=\"search-input\"\n      placeholder=\"Search...\"\n      onChange={(e) => onChange(e.currentTarget.value)}\n      className=\"form-control my-3\"\n    />\n  );\n};\n\nexport default Search;\n","import axios from \"axios\";\nimport { toast } from \"react-toastify\";\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(null, (error) => {\n  const expectedError =\n    error.response && error.response.status >= 400 && error.response < 500;\n  if (!expectedError) {\n    console.log(error);\n    toast(\"An Unexpected error\");\n  }\n  Promise.reject(error);\n});\nexport function setJwt(jwt) {\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\n}\nexport default {\n  get: axios.get,\n  post: axios.post,\n  put: axios.put,\n  delete: axios.delete,\n  setJwt,\n};\n","import http from \"./httpService\";\n\nconst apiEndpoint = \"/movies\";\n\nfunction movieUrl(movieId) {\n  return `${apiEndpoint}/${movieId}`;\n}\nexport function getMovies() {\n  return http.get(apiEndpoint);\n}\nexport function getMovie(movieId) {\n  return http.get(movieUrl(movieId));\n}\nexport function deleteMovie(movieId) {\n  return http.delete(movieUrl(movieId));\n}\nexport function saveMovie(movie) {\n  if (movie._id) {\n    const body = { ...movie };\n    delete body._id;\n    return http.put(movieUrl(movie._id), body);\n  }\n  return http.post(apiEndpoint, movie);\n}\n","import _ from \"lodash\";\n\nexport function Paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value();\n}\n","import http from \"./httpService\";\n\nexport function getGenres() {\n  return http.get(\"/genres\");\n}\n","import React, { Component } from \"react\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Pagination from \"../common/pagination\";\nimport ListGroup from \"../common/listgroup\";\nimport MoviesTable from \"./moviesTable\";\nimport Search from \"./search\";\nimport { getMovies, deleteMovie } from \"../services/movieService.js\";\nimport { Paginate } from \"../utils/paginate\";\nimport { getGenres } from \"../services/genreService.js\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    currentPage: 1,\n    pageSize: 4,\n    searchQuery: \"\",\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n  async componentDidMount() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n    const { data: movies } = await getMovies();\n    this.setState({\n      movies,\n      genres,\n    });\n  }\n  handleDelete = async (movie) => {\n    const originalMovies = this.state.movies;\n    const movies = originalMovies.filter((m) => m._id != movie._id);\n    this.setState({\n      movies: movies,\n    });\n    try {\n      await deleteMovie(movie._id);\n    } catch (ex) {\n      if (ex.response && ex.response.status === 404)\n        toast.error(\"This movie has already been deleted\");\n      this.setState({\n        movies: originalMovies,\n      });\n    }\n  };\n  handleLove = (movie) => {\n    const movies = [...this.state.movies];\n    var index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({\n      movies: movies,\n    });\n  };\n  handlePageChange = (page) => {\n    this.setState({\n      currentPage: page,\n    });\n  };\n  handleGenreSelect = (genre) => {\n    this.setState({\n      selectedGenre: genre,\n      currentPage: 1,\n      searchQuery: \"\",\n    });\n  };\n  getPagedData = () => {\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn,\n      searchQuery,\n    } = this.state;\n    if (searchQuery != null)\n      var filtered = allMovies.filter((m) =>\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\n      );\n    else\n      var filtered =\n        selectedGenre && selectedGenre._id\n          ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n          : allMovies;\n    var sorted = _.orderBy(filtered, sortColumn.path, sortColumn.order);\n    const movies = Paginate(sorted, currentPage, pageSize);\n    return { movies: movies, totalCount: filtered.length };\n  };\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  handleNavigate = (movie) => {};\n  handleSearch = (query) => {\n    this.setState({\n      searchQuery: query,\n      selectedGenre: null,\n      currentPage: 1,\n    });\n  };\n  render() {\n    const { pageSize, currentPage } = this.state;\n    const { user } = this.props;\n    const { movies, totalCount } = this.getPagedData();\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          {user && (\n            <Link to=\"/movies/new\" className=\"btn btn-primary btn-sm\">\n              New Movie\n            </Link>\n          )}\n          <p>Showing {totalCount} movies in the database</p>\n          <Search\n            value={this.state.searchQuery}\n            onChange={this.handleSearch}\n          ></Search>\n          <ToastContainer></ToastContainer>\n          <MoviesTable\n            user={user}\n            movies={movies}\n            onLike={this.handleLove}\n            onDelete={this.handleDelete}\n            onSort={this.handleSort}\n            onNavigate={this.handleNavigate}\n          />\n          <Pagination\n            itemsCount={totalCount}\n            currentPage={currentPage}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n","import React, { Component } from \"react\";\nconst Customers = () => {\n  return <h1>Customers</h1>;\n};\n\nexport default Customers;\n","import React, { Component } from \"react\";\nconst Rentals = () => {\n  return <h1>Rentals</h1>;\n};\n\nexport default Rentals;\n","import React, { Component } from \"react\";\nconst NotFound = () => {\n  return <h1>Not Found</h1>;\n};\n\nexport default NotFound;\n","import React, { Component } from \"react\";\nclass MovieDetails extends Component {\n  state = {};\n  handleSave = () => {\n    return this.props.history.push(\"/movies\");\n  };\n  render() {\n    return (\n      <div>\n        <div>Movie Form {this.props.match.params.id}</div>\n        <button className=\"btn btn-primary btn-save\" onClick={this.handleSave}>\n          Save\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default MovieDetails;\n","import React from \"react\";\nconst Input = ({ type, name, value, label, error, onChange }) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <input\n        autoFocus\n        value={value}\n        onChange={onChange}\n        name={name}\n        id={name}\n        type={type}\n        className=\"form-control\"\n      />\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nconst Select = ({\n  name,\n  items,\n  TextProperty,\n  ValuePropery,\n  label,\n  error,\n  value,\n  onChange,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor={name}>{label}</label>\n      <select\n        value={value}\n        name={name}\n        id={name}\n        onChange={onChange}\n        className=\"custom-select d-block w-100\"\n      >\n        <option value=\"\"></option>\n        {items.map((item) => (\n          <option value={item[ValuePropery]} key={item[ValuePropery]}>\n            {item[TextProperty]}\n          </option>\n        ))}\n      </select>\n      {error && <div className=\"alert alert-danger\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Select;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Input from \"../common/input\";\nimport Select from \"../common/select\";\nclass Form extends Component {\n  state = {\n    data: {},\n    errors: {},\n  };\n  validate = () => {\n    const options = { abortEarly: false };\n    const { error } = Joi.validate(this.state.data, this.schema, options);\n    const errors = {};\n    if (!error) return null;\n    for (let item of error.details) errors[item.path[0]] = item.message;\n    return errors;\n  };\n  validateProperty = ({ name, value }) => {\n    const obj = { [name]: value };\n    const schema = { [name]: this.schema[name] };\n    const { error } = Joi.validate(obj, schema);\n    return error ? error.details[0].message : null;\n  };\n  handleChange = ({ currentTarget: input }) => {\n    const { data, errors } = { ...this.state };\n    data[input.name] = input.value;\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    this.setState({ data, errors });\n  };\n  handleSubmit = (e) => {\n    e.preventDefault();\n    var errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n    this.doSubmit();\n  };\n  renderButton(label) {\n    return (\n      <button disabled={this.validate()} className=\"btn btn-primary\">\n        {label}\n      </button>\n    );\n  }\n  renderInput(name, label, type = \"text\") {\n    const { data, errors } = { ...this.state };\n    return (\n      <Input\n        type={type}\n        name={name}\n        onChange={this.handleChange}\n        label={label}\n        value={data[name]}\n        error={errors[name]}\n      ></Input>\n    );\n  }\n  renderSelect(name, items, TextProperty, ValuePropery, label) {\n    const { data, errors } = { ...this.state };\n    return (\n      <Select\n        name={name}\n        items={items}\n        TextProperty={TextProperty}\n        ValuePropery={ValuePropery}\n        onChange={this.handleChange}\n        label={label}\n        value={data[name]}\n        error={errors[name]}\n      ></Select>\n    );\n  }\n}\n\nexport default Form;\n","import http from \"./httpService\";\nimport jwtDecode from \"jwt-decode\";\n\nconst apiEndpoint = \"/auth\";\n\nhttp.setJwt(getJwt());\n\nexport async function login(email, password) {\n  const { data: jwt } = await http.post(apiEndpoint, { email, password });\n  localStorage.setItem(\"token\", jwt);\n}\nexport function loginWithJwt(token) {\n  localStorage.setItem(\"token\", token);\n}\nexport function logout() {\n  localStorage.removeItem(\"token\");\n}\nexport function getJwt() {\n  return localStorage.getItem(\"token\");\n}\nexport function getCurrentUser() {\n  try {\n    const token = localStorage.getItem(\"token\");\n    return jwtDecode(token);\n  } catch (error) {\n    return null;\n  }\n}\n\nexport default {\n  login,\n  loginWithJwt,\n  getCurrentUser,\n  getJwt,\n  logout,\n};\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport { Redirect } from \"react-router-dom\";\nimport Form from \"../common/form\";\nimport auth from \"../services/authService.js\";\nclass LoginForm extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n    },\n    errors: {},\n  };\n  schema = {\n    username: Joi.string().required().label(\"Username\"),\n    password: Joi.string().required().label(\"Password\"),\n  };\n\n  doSubmit = async () => {\n    try {\n      const { data } = this.state;\n      await auth.login(data.username, data.password);\n      const { state } = this.props.location;\n      window.location = state ? state.from.pathname : \"/\";\n    } catch (ex) {\n      const errors = { ...this.state.errors };\n      if (ex.response && ex.response.status === 400) {\n        errors.username = ex.reponse.data;\n        this.setState({\n          errors,\n        });\n      }\n    }\n  };\n\n  render() {\n    if (auth.getCurrentUser()) return <Redirect to=\"/\"></Redirect>;\n    return (\n      <div>\n        <h1>Login Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            {this.renderInput(\"username\", \"Username\")}\n            {this.renderInput(\"password\", \"Password\", \"password\")}\n            {this.renderButton(\"login\")}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n","import http from \"./httpService\";\n\nconst apiEndpoint = \"/users\";\n\nexport function register(user) {\n  return http.post(apiEndpoint, {\n    email: user.username,\n    password: user.password,\n    name: user.name,\n  });\n}\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport Form from \"../common/form\";\nimport * as userService from \"../services/userService\";\nimport auth from \"../services/authService.js\";\n\nclass Register extends Form {\n  state = {\n    data: {\n      username: \"\",\n      password: \"\",\n      name: \"\",\n    },\n    errors: {},\n  };\n  schema = {\n    username: Joi.string()\n      .required()\n      .label(\"Username\")\n      .email({ minDomainAtoms: 2 }),\n    password: Joi.string().required().label(\"Password\").min(5),\n    name: Joi.string().required().label(\"Name\"),\n  };\n  doSubmit = async () => {\n    try {\n      const response = await userService.register(this.state.data);\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\n      window.location = \"/\";\n    } catch (ex) {\n      if (ex.response && ex.response.status === 400) {\n        const errors = { ...this.state.errors };\n        errors.username = ex.response.data;\n        this.setState({\n          errors,\n        });\n      }\n    }\n  };\n  render() {\n    return (\n      <div>\n        <h1>Register</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            {this.renderInput(\"username\", \"Username\")}\n            {this.renderInput(\"password\", \"Password\", \"password\")}\n            {this.renderInput(\"name\", \"Name\")}\n            {this.renderButton(\"Register\")}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from \"react\";\nimport Joi from \"joi-browser\";\nimport { getGenres } from \"../services/genreService\";\nimport Form from \"./loginForm\";\nimport { getMovie, saveMovie } from \"../services/movieService\";\n\nclass AddMovie extends Form {\n  state = {\n    data: {\n      title: \"\",\n      genreId: \"\",\n      numberInStock: \"\",\n      dailyRentalRate: \"\",\n    },\n    errors: {},\n    genres: [],\n  };\n  schema = {\n    _id: Joi.string(),\n    title: Joi.string().required().label(\"Title\"),\n    genreId: Joi.string().required().label(\"Genres\"),\n    numberInStock: Joi.number()\n      .integer()\n      .min(1)\n      .max(100)\n      .required()\n      .label(\"Number in stock\"),\n    dailyRentalRate: Joi.number().min(1).max(10).required().label(\"Rate\"),\n  };\n  async populateGenres() {\n    const { data } = await getGenres();\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\n    this.setState({\n      genres,\n    });\n  }\n  async populateMovie() {\n    try {\n      const movieId = this.props.match.params.id;\n      if (movieId === \"new\") return;\n      const { data: movie } = await getMovie(movieId);\n      this.setState({\n        data: this.mapToViewModel(movie),\n      });\n    } catch (ex) {\n      this.props.history.replace(\"/not-found\");\n    }\n  }\n  async componentDidMount() {\n    await this.populateGenres();\n    await this.populateMovie();\n  }\n  mapToViewModel(movie) {\n    return {\n      _id: movie._id,\n      title: movie.title,\n      genreId: movie.genre._id,\n      numberInStock: movie.numberInStock,\n      dailyRentalRate: movie.dailyRentalRate,\n    };\n  }\n  doSubmit = async () => {\n    await saveMovie(this.state.data);\n    this.props.history.push(\"/movies\");\n  };\n  render() {\n    return (\n      <div>\n        <h1>Movie Form</h1>\n        <form onSubmit={this.handleSubmit}>\n          <div className=\"form-group\">\n            {this.renderInput(\"title\", \"Title\")}\n            {this.renderSelect(\n              \"genreId\",\n              this.state.genres,\n              \"name\",\n              \"_id\",\n              \"Genres\"\n            )}\n            {this.renderInput(\"numberInStock\", \"Number in stock\")}\n            {this.renderInput(\"dailyRentalRate\", \"Rate\")}\n            {this.renderButton(\"Save\")}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default AddMovie;\n","import React from \"react\";\nimport { Route, Link, NavLink } from \"react-router-dom\";\nconst NavBar = ({ user }) => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Vidly\n      </Link>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\"\n      >\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n      <div className=\"collapse navbar-collapse\">\n        <ul className=\"navbar-nav mr-auto\">\n          <li className=\"nav-item active\">\n            <NavLink className=\"nav-link\" to=\"/movies\">\n              Movies\n            </NavLink>\n          </li>\n          <li className=\"nav-item \">\n            <NavLink className=\"nav-link\" to=\"/customers\">\n              Customers\n            </NavLink>\n          </li>\n          <li className=\"nav-item \">\n            <NavLink className=\"nav-link\" to=\"/rentals\">\n              Rentals\n            </NavLink>\n          </li>\n          {!user && (\n            <React.Fragment>\n              <li className=\"nav-item \">\n                <NavLink className=\"nav-link\" to=\"/login\">\n                  Login\n                </NavLink>\n              </li>\n              <li className=\"nav-item \">\n                <NavLink className=\"nav-link\" to=\"/Register\">\n                  Register\n                </NavLink>\n              </li>\n            </React.Fragment>\n          )}\n          {user && (\n            <React.Fragment>\n              <li className=\"nav-item \">\n                <NavLink className=\"nav-link\" to=\"/profile\">\n                  {user.name}\n                </NavLink>\n              </li>\n              <li className=\"nav-item \">\n                <NavLink className=\"nav-link\" to=\"/logout\">\n                  Logout\n                </NavLink>\n              </li>\n            </React.Fragment>\n          )}\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default NavBar;\n","import React, { Component } from \"react\";\nimport auth from \"../services/authService.js\";\nclass Logout extends Component {\n  state = {};\n  componentDidMount() {\n    auth.logout();\n    window.location = \"/\";\n  }\n  render() {\n    return null;\n  }\n}\n\nexport default Logout;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"../services/authService\";\nconst ProtectedRoute = ({ path, component: Component, render, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (!auth.getCurrentUser())\n          return (\n            <Redirect\n              to={{ pathname: \"/login\", state: { from: props.location } }}\n            ></Redirect>\n          );\n        return Component ? <Component {...props} /> : render(props);\n      }}\n    />\n  );\n};\n\nexport default ProtectedRoute;\n","import React, { Component } from \"react\";\nimport { Route, Link, Redirect, Switch, NavLink } from \"react-router-dom\";\nimport Movies from \"./components/movies\";\nimport Customers from \"./components/customers\";\nimport Rentals from \"./components/rentals\";\nimport NotFound from \"./components/notfound\";\nimport moviedetails from \"./components/moviedetails\";\nimport LoginForm from \"./components/loginForm\";\nimport RegisterForm from \"./components/RegisterForm\";\nimport AddMovie from \"./components/addmovie\";\nimport NavBar from \"./components/navbar\";\nimport Logout from \"./components/logout\";\nimport ProtectedRoute from \"./common/protectedroute\";\nimport auth from \"./services/authService\";\nimport { getMovies, saveMoviees } from \"./services/fakeMovieService\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {};\n  componentDidMount() {\n    try {\n      const user = auth.getCurrentUser();\n      this.setState({ user });\n    } catch (ex) {}\n  }\n  render() {\n    const { user } = this.state;\n    return (\n      <React.Fragment>\n        <NavBar user={user}></NavBar>\n        <main className=\"container\">\n          <Switch>\n            <Route path=\"/Register\" component={RegisterForm} />\n            <Route path=\"/login\" component={LoginForm} />\n            <Route path=\"/logout\" component={Logout}></Route>\n            <ProtectedRoute path=\"/movies/:id\" component={AddMovie} />\n            <Route\n              path=\"/movies\"\n              render={(props) => <Movies user={user} {...props} />}\n            ></Route>\n            <Route path=\"/customers\" component={Customers}></Route>\n            <Route path=\"/rentals\" component={Rentals}></Route>\n            <Route path=\"/not-found\" component={NotFound}></Route>\n            <Route\n              path=\"/\"\n              exact\n              render={(props) => <Movies user={this.state.user} {...props} />}\n            ></Route>\n            <Redirect to=\"/not-found\"></Redirect>\n          </Switch>\n        </main>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconsole.log(process.env);\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}